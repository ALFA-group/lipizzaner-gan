ensemble_optimization:
  algorithm: ga       # ga, greedy
  params:
    fitness_metric: fid # fid, tvd
    mode: reo-gen # ga: reo-gen, nreo-gen / greedy: random, iterative
    crossover_probability: 0.8
    mutation_probability: 0.2
    population_size: 5
    n_generations: 0 # If generation is 0, the stop condition is the number of fitness evaluations
    n_fitness_evaluations: 10
    min_ensemble_size: 2
    max_ensemble_size: 8
    # ensemble_size: 7
  frequency_show_information: 2

trainer:
  name: lipizzaner_gan
  n_iterations: 5
  calculate_net_weights_dist: True
  # independent_probability, exact_proportion
  mixture_generator_samples_mode: exact_proportion
  params:
    population_size: 1
    tournament_size: 2
    n_replacements: 1
    default_adam_learning_rate: 0.0002
    # Hyperparameter mutation
    alpha: 0.0001
    mutation_probability: 0.5
    discriminator_skip_each_nth_step: 1
    mixture_sigma: 0.01
    enable_selection: True
    score:
      enabled: True
      type: fid
      score_sample_size: 1000
      cuda: False
    fitness:
      fitness_sample_size: 1000
      fitness_mode: average    # worse, best, average
dataloader:
  dataset_name: mnist
  use_batch: True
  batch_size: 400
  n_batches: 0
  shuffle: True
network:
  name: four_layer_perceptron
  loss: bceloss
master:
  calculate_score: True
  score_sample_size: 50000
  cuda: False
general: !include general.yml
